/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import MODEL.Borrowed;
import MODEL.InvalidInputException;
import MODEL.Item;
import MODEL.Member;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Pushpitha Rukshan
 */
public class BorrowAndReturn extends javax.swing.JFrame {

    /**
     * Creates new form BorrowAndReturn
     */
    public BorrowAndReturn() {
        initComponents();
        this.setResizable(false);
        showDate();
        showTime();
        setTitle("Library Management System");
        //txtBrwDate.setEditable(false);
    }

    void showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        lblDate.setText(s.format(d));
        txtBrwDate.setText(s.format(d));
        txtRCurrentDate.setText(s.format(d));
    }

    void showTime() {
        new Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                java.util.Date d = new java.util.Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                lblTime.setText(s.format(d));
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMemberID = new javax.swing.JTextField();
        txtBookID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        txtBrwDate = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        txtRDate = new javax.swing.JLabel();
        lblMemberName = new javax.swing.JLabel();
        lblBookName = new javax.swing.JLabel();
        lblAvailableBook = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_view_borrowList = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtRMemberID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtRBookID = new javax.swing.JTextField();
        lblRMemberName = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        txtRBookName = new javax.swing.JTextField();
        txtRBorrowedDate = new javax.swing.JTextField();
        txtRCurrentDate = new javax.swing.JTextField();
        txtRDueDate = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_view_borrowed = new javax.swing.JTable();
        lblNotFoundBook = new javax.swing.JLabel();
        txtDelayDates = new javax.swing.JTextField();
        lblBBID = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_view_fine = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblTotalFine = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(153, 153, 153));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1000, 650));

        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 622));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setText("Member ID :");

        jLabel2.setText("Book ID :");

        txtMemberID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMemberIDKeyReleased(evt);
            }
        });

        txtBookID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBookIDKeyReleased(evt);
            }
        });

        jLabel3.setText("Available Copies :");

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setText("Add Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setText("Delete Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Borrowing Date :");

        jLabel6.setText("Returning Date :");

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDate.setText("Date");

        lblTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTime.setText("Time");

        txtBrwDate.setEditable(false);
        txtBrwDate.setBackground(new java.awt.Color(204, 204, 204));

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        txtRDate.setForeground(new java.awt.Color(102, 102, 255));
        txtRDate.setText("jLabel4");

        lblAvailableBook.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("BORROW BOOKS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addComponent(txtRDate, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtBrwDate)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                                    .addComponent(lblAvailableBook, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(83, 83, 83)))
                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblAvailableBook))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtBrwDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(txtRDate, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        jTable_view_borrowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Member Name", "Book ID", "Book Name", "Borrowing Date", "Returning Date"
            }
        ));
        jScrollPane1.setViewportView(jTable_view_borrowList);
        if (jTable_view_borrowList.getColumnModel().getColumnCount() > 0) {
            jTable_view_borrowList.getColumnModel().getColumn(0).setResizable(false);
            jTable_view_borrowList.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTable_view_borrowList.getColumnModel().getColumn(1).setResizable(false);
            jTable_view_borrowList.getColumnModel().getColumn(2).setResizable(false);
            jTable_view_borrowList.getColumnModel().getColumn(2).setPreferredWidth(5);
            jTable_view_borrowList.getColumnModel().getColumn(3).setResizable(false);
            jTable_view_borrowList.getColumnModel().getColumn(4).setResizable(false);
            jTable_view_borrowList.getColumnModel().getColumn(5).setResizable(false);
        }

        jButton3.setBackground(new java.awt.Color(153, 153, 255));
        jButton3.setText("Borrow Books");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setText("HOME");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(449, 449, 449)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Borrow Book", jPanel1);

        jPanel5.setBackground(new java.awt.Color(153, 153, 255));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("RETURN BOOKS");

        jLabel8.setText("Member ID :");

        jLabel9.setText("Book ID :");

        jLabel10.setText("Borrowed Date :");

        jLabel11.setText("Due to Return :");

        jLabel12.setText("Current Date :");

        txtRMemberID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRMemberIDKeyReleased(evt);
            }
        });

        jLabel13.setText("Book Name :");

        txtRBookID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRBookIDKeyReleased(evt);
            }
        });

        jLabel19.setText("Delay Dates :");

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setText("Calculate Fine");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtRBookName.setEditable(false);
        txtRBookName.setBackground(new java.awt.Color(204, 204, 204));
        txtRBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRBookNameKeyReleased(evt);
            }
        });

        txtRBorrowedDate.setEditable(false);
        txtRBorrowedDate.setBackground(new java.awt.Color(204, 204, 204));
        txtRBorrowedDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRBorrowedDateKeyReleased(evt);
            }
        });

        txtRCurrentDate.setEditable(false);
        txtRCurrentDate.setBackground(new java.awt.Color(204, 204, 204));
        txtRCurrentDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRCurrentDateKeyReleased(evt);
            }
        });

        txtRDueDate.setEditable(false);
        txtRDueDate.setBackground(new java.awt.Color(204, 204, 204));
        txtRDueDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRDueDateKeyReleased(evt);
            }
        });

        jTable_view_borrowed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member Name", "Book ID"
            }
        ));
        jScrollPane2.setViewportView(jTable_view_borrowed);
        if (jTable_view_borrowed.getColumnModel().getColumnCount() > 0) {
            jTable_view_borrowed.getColumnModel().getColumn(0).setResizable(false);
            jTable_view_borrowed.getColumnModel().getColumn(1).setResizable(false);
            jTable_view_borrowed.getColumnModel().getColumn(1).setPreferredWidth(5);
        }

        lblBBID.setBackground(new java.awt.Color(153, 153, 255));
        lblBBID.setForeground(new java.awt.Color(153, 153, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(425, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(416, 416, 416))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtRMemberID, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(txtRBookID)
                    .addComponent(txtRBookName)
                    .addComponent(txtRBorrowedDate)
                    .addComponent(txtRCurrentDate)
                    .addComponent(txtRDueDate))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNotFoundBook, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblBBID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(txtDelayDates, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtRMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtRBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNotFoundBook, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtRBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtRBorrowedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBBID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtRDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtRCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jButton4)
                    .addComponent(txtDelayDates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        jTable_view_fine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Member Name", "Book ID", "Book Name", "Delay Dates", "Fine"
            }
        ));
        jScrollPane3.setViewportView(jTable_view_fine);
        if (jTable_view_fine.getColumnModel().getColumnCount() > 0) {
            jTable_view_fine.getColumnModel().getColumn(0).setResizable(false);
            jTable_view_fine.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTable_view_fine.getColumnModel().getColumn(1).setResizable(false);
            jTable_view_fine.getColumnModel().getColumn(2).setResizable(false);
            jTable_view_fine.getColumnModel().getColumn(2).setPreferredWidth(2);
            jTable_view_fine.getColumnModel().getColumn(3).setResizable(false);
            jTable_view_fine.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTable_view_fine.getColumnModel().getColumn(4).setResizable(false);
            jTable_view_fine.getColumnModel().getColumn(4).setPreferredWidth(2);
            jTable_view_fine.getColumnModel().getColumn(5).setResizable(false);
        }

        jButton6.setBackground(new java.awt.Color(153, 153, 255));
        jButton6.setText("HOME");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Total :");

        lblTotalFine.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTotalFine.setText("0.00");

        jButton8.setBackground(new java.awt.Color(153, 153, 255));
        jButton8.setText("Calculate Bill");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(lblTotalFine)
                        .addGap(32, 32, 32)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(261, 261, 261))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lblTotalFine)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Return Book", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //  int q = Integer.parseInt(txtQty.getText());
        int qleft = Integer.parseInt(lblAvailableBook.getText());

        if (qleft > 0) {

            try {
                int id = Integer.parseInt(txtBookID.getText());
                int available = qleft;
                Connection con = DB.DB_Connection.main();
                String sql = "Update itemtable set NoCopies = NoCopies -'" + 1 + "' where ID = '" + id + "'";
                PreparedStatement st = con.prepareStatement(sql);
                st.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Fill fields");
            }

            try {
                Date date = jDateChooser1.getDate();
                DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
                txtRDate.setText(format.format(date));
                viewBorrowlList();
                JOptionPane.showMessageDialog(rootPane, "Book Added!");
                //txtMemberID.setText("");
                txtBookID.setText("");
                txtRDate.setText("");
                lblAvailableBook.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(BorrowAndReturn.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "No Book Find");
            txtMemberID.setText("");
            txtBookID.setText("");
            txtRDate.setText("");
            lblAvailableBook.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtMemberIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMemberIDKeyReleased
        int id = Integer.parseInt(txtMemberID.getText());
        String query1 = "select * from member where MemberID='" + id + "'";
        try {
            Connection con = DB.DB_Connection.main();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            if (rs.next()) {
                lblMemberName.setText(rs.getString("MemberName"));
            } else {
                lblMemberName.setText("");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_txtMemberIDKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        BorrowBooks();
        jTable_view_borrowList.setModel(new DefaultTableModel(null, new String[]{"Member ID", "Member Name", "Book ID", "Book Name", "Borrowing Date", "Returning Date"}));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //deleteItem();

        DefaultTableModel model = (DefaultTableModel) jTable_view_borrowList.getModel();
        int selectedRowIndex = jTable_view_borrowList.getSelectedRow();
        int i = jTable_view_borrowList.getSelectedRow();
        if (i >= 0) {
            model.removeRow(i);
        } else {
            JOptionPane.showMessageDialog(this, "Unable to delete");
        }

        try {
            int rowcount = jTable_view_borrowList.getRowCount();
            Connection con = DB.DB_Connection.main();
            con.setAutoCommit(false);

            for (int row = 0; row < rowcount; row++) {
                int BookID = (Integer) jTable_view_borrowList.getValueAt(row, 2);

                String query = "Update itemtable set NoCopies = NoCopies +'" + 1 + "' where ID = '" + BookID + "'";
                PreparedStatement pst = con.prepareStatement(query);
                pst.executeUpdate();
                //con.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtBookIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookIDKeyReleased
        int id = Integer.parseInt(txtBookID.getText());
        String query1 = "select * from itemtable where ID='" + id + "'";
        try {
            Connection con = DB.DB_Connection.main();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            if (rs.next()) {
                lblBookName.setText(rs.getString("BookName"));
                lblAvailableBook.setText(rs.getString("NoCopies"));
            } else {
                lblBookName.setText("");
                lblAvailableBook.setText("");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_txtBookIDKeyReleased

    private void txtRMemberIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRMemberIDKeyReleased
        /* DefaultTableModel model = (DefaultTableModel) jTable_view_borrowed.getModel();
        String search = txtRMemberID.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable_view_borrowed.setRowSorter(tr);
        
        setText(model.getValueAt(selectedRowIndex, 0).toString());
        tr.setRowFilter(RowFilter.regexFilter(search));
         */
        int id = Integer.parseInt(txtRMemberID.getText());
        String query1 = "select * from borrowbook where MemberID='" + id + "'";
        try {
            Connection con = DB.DB_Connection.main();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            if (rs.next()) {
                lblRMemberName.setText("");
                viewRBorrowedlList();
                DefaultTableModel model = (DefaultTableModel) jTable_view_borrowed.getModel();
                model.setRowCount(0);
                viewRBorrowedlList();

            } else {
                jTable_view_borrowed.setModel(new DefaultTableModel(null, new String[]{"Member Name", "Book ID"}));
                lblRMemberName.setText("No Member Found");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_txtRMemberIDKeyReleased

    private void txtRBookIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRBookIDKeyReleased
        int bid = Integer.parseInt(txtRBookID.getText());
        int mid = Integer.parseInt(txtRMemberID.getText());
        String query1 = "select * from borrowbook where BookID='" + bid + "' && MemberID='" + mid + "'";
        try {
            Connection con = DB.DB_Connection.main();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            if (rs.next()) {
                lblNotFoundBook.setText("");
                txtRBookName.setText(rs.getString("BookName"));
                txtRBorrowedDate.setText(rs.getString("BorrowingDate"));
                txtRDueDate.setText(rs.getString("ReturningDate"));
                lblBBID.setText(rs.getString("BorrowBID"));
            } else {
                lblNotFoundBook.setText("Invalid Book ID");
                txtRBookName.setText("");
                txtRBorrowedDate.setText("");
                txtRDueDate.setText("");
                lblBBID.setText("");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "No Book Found");
        }
    }//GEN-LAST:event_txtRBookIDKeyReleased

    private void txtRBookNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRBookNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRBookNameKeyReleased

    private void txtRBorrowedDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRBorrowedDateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRBorrowedDateKeyReleased

    private void txtRCurrentDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRCurrentDateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRCurrentDateKeyReleased

    private void txtRDueDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRDueDateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRDueDateKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            if ((!txtRMemberID.getText().isEmpty())
                    && (!txtRBookID.getText().isEmpty())
                    && (!txtDelayDates.getText().isEmpty())) {

                int id = Integer.parseInt(txtRMemberID.getText());
                int ReturnBID = Integer.parseInt(txtRBookID.getText());
                Connection con = DB.DB_Connection.main();
                String sql = "Update itemtable set NoCopies = NoCopies +'" + 1 + "' where ID = '" + ReturnBID + "'";
                PreparedStatement st = con.prepareStatement(sql);
                st.executeUpdate();
            }else{
                throw new InvalidInputException();
            }
        } catch (InvalidInputException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Error", 0);
        } catch (SQLException ex) {
            Logger.getLogger(BorrowAndReturn.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            viewFine();
            JOptionPane.showMessageDialog(rootPane, "Fine Calculated");

            int bbid = Integer.parseInt(lblBBID.getText());
            Connection con = DB.DB_Connection.main();
            String sql2 = "delete from borrowbook where BorrowBID = '" + bbid + "'";
            PreparedStatement st1 = con.prepareStatement(sql2);
            st1.executeUpdate();

            DefaultTableModel model = (DefaultTableModel) jTable_view_borrowed.getModel();
            model.setRowCount(0);

            viewRBorrowedlList();

            txtRBookID.setText("");
            txtRBookName.setText("");
            txtRBorrowedDate.setText("");
            txtRDueDate.setText("");
            lblBBID.setText("");
            txtDelayDates.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(BorrowAndReturn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        HomeUI home = new HomeUI();
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        HomeUI home = new HomeUI();
        home.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        sendToInvoiceDB();
    }//GEN-LAST:event_jButton8ActionPerformed

    public ArrayList<Item> borrowList1() throws SQLException {
        ArrayList<Item> borrowList = new ArrayList<>();

        try {
            Connection con = DB.DB_Connection.main();
            int id = Integer.parseInt(txtBookID.getText());
            String query1 = "select * from itemtable where ID = " + id;
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Item item;
            while (rs.next()) {
                item = new Item(rs.getInt("ID"), rs.getString("BookName"), rs.getString("AuthorName"), rs.getString("ISBN"), rs.getInt("Price"), rs.getInt("NoCopies"));
                borrowList.add(item);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return borrowList;
    }

    public ArrayList<Member> borrowList2() throws SQLException {
        ArrayList<Member> borrowList2 = new ArrayList<>();

        try {
            Connection con = DB.DB_Connection.main();
            int id = Integer.parseInt(txtMemberID.getText());
            String query1 = "select * from member where MemberID = " + id;

            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Member member;
            while (rs.next()) {
                member = new Member(rs.getInt("MemberID"), rs.getString("MemberName"), rs.getInt("Contact"), rs.getString("Address"), rs.getString("NIC"), rs.getString("RegDate"), rs.getInt("BookID"));
                borrowList2.add(member);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return borrowList2;
    }

    public void viewBorrowlList() throws SQLException {
        ArrayList<Item> list = borrowList1();
        ArrayList<Member> list1 = borrowList2();
        DefaultTableModel model = (DefaultTableModel) jTable_view_borrowList.getModel();
        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list1.get(i).getMemberID();
            row[1] = list1.get(i).getMemberName();
            row[2] = list.get(i).getItemID();
            row[3] = list.get(i).getBookName();
            row[4] = txtBrwDate.getText();
            row[5] = txtRDate.getText();
            model.addRow(row);

        }
    }

    public void BorrowBooks() {
        try {
            int rowcount = jTable_view_borrowList.getRowCount();
            PreparedStatement pst;
            Connection con = DB.DB_Connection.main();
            con.setAutoCommit(false);

            for (int row = 0; row < rowcount; row++) {
                int MemberID = (Integer) jTable_view_borrowList.getValueAt(row, 0);
                String MemberName = (String) jTable_view_borrowList.getValueAt(row, 1);
                int BookID = (Integer) jTable_view_borrowList.getValueAt(row, 2);
                String BookName = (String) jTable_view_borrowList.getValueAt(row, 3);
                String BorrDate = (String) jTable_view_borrowList.getValueAt(row, 4);
                String RetDate = (String) jTable_view_borrowList.getValueAt(row, 5);

                String Time = (String) lblTime.getText();
                int bbid = 0;

                String query = "insert into borrowbook(BorrowBID,MemberID,BookID,MemberName,BookName,BorrowingDate,ReturningDate) values ('" + bbid + "','" + MemberID + "','" + BookID + "','" + MemberName + "','" + BookName + "','" + BorrDate + "','" + RetDate + "')";
                pst = con.prepareStatement(query);
                pst.execute();
                con.setAutoCommit(true);
                //con.close();
            }
            JOptionPane.showMessageDialog(rootPane, "Successfully saved!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    public ArrayList<Borrowed> borrowedList() throws SQLException {
        ArrayList<Borrowed> borrowedList = new ArrayList<>();

        try {
            Connection con = DB.DB_Connection.main();
            int id = Integer.parseInt(txtRMemberID.getText());
            String query1 = "select * from borrowbook where MemberID = " + id;
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Borrowed borrowed;
            while (rs.next()) {
                borrowed = new Borrowed(rs.getInt("BorrowBID"), rs.getInt("MemberID"), rs.getInt("BookID"), rs.getString("MemberName"), rs.getString("BookName"), rs.getString("BorrowingDate"), rs.getString("ReturningDate"));
                borrowedList.add(borrowed);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return borrowedList;
    }

    public void viewRBorrowedlList() throws SQLException {
        ArrayList<Borrowed> list = borrowedList();
        DefaultTableModel model = (DefaultTableModel) jTable_view_borrowed.getModel();
        Object[] row = new Object[2];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMemberName();
            row[1] = list.get(i).getBookID();

            model.addRow(row);

        }
    }

    public ArrayList<Borrowed> ReturnBList() throws SQLException {
        ArrayList<Borrowed> borrowedList = new ArrayList<>();

        try {
            Connection con = DB.DB_Connection.main();
            int id = Integer.parseInt(lblBBID.getText());
            String query1 = "select * from borrowbook where BorrowBID = " + id;
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Borrowed borrowed;
            while (rs.next()) {
                borrowed = new Borrowed(rs.getInt("BorrowBID"), rs.getInt("MemberID"), rs.getInt("BookID"), rs.getString("MemberName"), rs.getString("BookName"), rs.getString("BorrowingDate"), rs.getString("ReturningDate"));
                borrowedList.add(borrowed);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        return borrowedList;
    }

    public void viewFine() throws SQLException {
        ArrayList<Borrowed> list = ReturnBList();
        DefaultTableModel model = (DefaultTableModel) jTable_view_fine.getModel();
        Integer fine = new Integer(20);

        Object[] row = new Object[6];
        row[0] = list.get(0).getMemberID();
        row[1] = list.get(0).getMemberName();
        row[2] = list.get(0).getBookID();
        row[3] = list.get(0).getBookName();
        row[4] = Float.parseFloat(txtDelayDates.getText());
        row[5] = (Float.parseFloat(txtDelayDates.getText())) * fine.floatValue();

        model.addRow(row);

        float tot = 0;
        for (int j = 0; j < jTable_view_fine.getRowCount(); j++) {
            String g = jTable_view_fine.getValueAt(j, 5).toString();
            float amount = Float.parseFloat(g);
            tot += amount;
        }
        lblTotalFine.setText("" + tot);
    }

    public void sendToInvoiceDB() {
        try {
            int rowcount = jTable_view_fine.getRowCount();
            Connection con = DB.DB_Connection.main();

            for (int row = 0; row < rowcount; row++) {
                int id = 0;
                int MemberID = (Integer) jTable_view_fine.getValueAt(row, 0);
                String MemberName = (String) jTable_view_fine.getValueAt(row, 1);
                int BookID = (Integer) jTable_view_fine.getValueAt(row, 2);
                String BookName = (String) jTable_view_fine.getValueAt(row, 3);
                int DelayDates = (Integer) jTable_view_fine.getValueAt(row, 4);
                float Fine = (Float) jTable_view_fine.getValueAt(row, 5);
                float Total = (Float) jTable_view_fine.getValueAt(row, 6);

                String query = "Insert into booksettledetails(ID,MemID,MemName,BookID,BookName,DelayDates,Fine,TotalPaid)values('" + id + "','" + MemberID + "','" + MemberName + "','" + BookID + "','" + BookName + "','" + DelayDates + "','" + Fine + "','" + Total + "')";
                Statement st = con.createStatement();
                st.executeQuery(query);
                con.setAutoCommit(true);
                con.close();
            }
            JOptionPane.showMessageDialog(rootPane, "Successfully saved!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /*public void deleteItem() {
        /*try {
            Connection con = DB.DB_Connection.main();
            int BookID = (Integer) jTable_view_borrowList.getValueAt(2);
            int id = Integer.parseInt(txtBookID.getText());
            
            String sql = "Update itemtable set NoCopies = NoCopies +'" + 1 + "' where ID = '" + id + "'";
            PreparedStatement st = con.prepareStatement(sql);
            st.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Fill fields");
        }*/
 /* try {
            int rowcount = jTable_view_borrowList.getRowCount();
            Connection con = DB.DB_Connection.main();
            con.setAutoCommit(false);

            for (int row = 0; row < rowcount; row++) {
                int BookID = (Integer) jTable_view_borrowList.getValueAt(row, 2);

                String query = "Update itemtable set NoCopies = NoCopies +'" + 1 + "' where ID = '" + BookID + "'";
                PreparedStatement pst = con.prepareStatement(query);
                pst.executeUpdate();
                //con.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }*/

 /*
    
    
    
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowAndReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowAndReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowAndReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowAndReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowAndReturn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_view_borrowList;
    private javax.swing.JTable jTable_view_borrowed;
    private javax.swing.JTable jTable_view_fine;
    private javax.swing.JLabel lblAvailableBook;
    private javax.swing.JLabel lblBBID;
    private javax.swing.JLabel lblBookName;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblMemberName;
    private javax.swing.JLabel lblNotFoundBook;
    private javax.swing.JLabel lblRMemberName;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTotalFine;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBrwDate;
    private javax.swing.JTextField txtDelayDates;
    private javax.swing.JTextField txtMemberID;
    private javax.swing.JTextField txtRBookID;
    private javax.swing.JTextField txtRBookName;
    private javax.swing.JTextField txtRBorrowedDate;
    private javax.swing.JTextField txtRCurrentDate;
    private javax.swing.JLabel txtRDate;
    private javax.swing.JTextField txtRDueDate;
    private javax.swing.JTextField txtRMemberID;
    // End of variables declaration//GEN-END:variables
}
